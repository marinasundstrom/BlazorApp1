@inject IDialogService DialogService
@inject IStringLocalizer<AppBar> T

<MudAppBar Elevation="0">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
        OnClick="@(async (e) => await DrawerToggleCallback.InvokeAsync())" />
    <MudSpacer />
    <LoginDisplay />
    <MudIconButton Icon="@(IsDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)" Color="Color.Inherit" Edge="Edge.Start"
        OnClick="@(async (e) => await DarkModeToggleCallback.InvokeAsync())" />
    <MudMenu Dense="true" Color="Color.Inherit" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopCenter"
        PopoverClass="docs-layout-menu-shadow" ListClass="pa-2 docs-menu-list" LockScroll="true">
        <ActivatorContent>
            <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" Class="mr-2" />
        </ActivatorContent>
        <ChildContent>
            <MudMenuItem OnClick="ChangeLocale">
                <div class="d-flex">
                    <MudIcon Icon="@Icons.Material.Filled.Language" class="me-2" />
                    <MudText Style="overflow: hidden; white-space: nowrap;">@T["ChangeLocale"]</MudText>
                </div>
            </MudMenuItem>
        </ChildContent>
    </MudMenu>
</MudAppBar>

@code {
    [Parameter]
    public EventCallback DrawerToggleCallback { get; set; }

    [Parameter]
    public EventCallback DarkModeToggleCallback { get; set; }

    [Parameter]
    public bool IsDarkMode { get; set; }

    async Task ChangeLocale()
    {
        var dialogRef = DialogService.Show<LocaleSelector>(T["ChangeLocale"]);
        await dialogRef.Result;
    }
}