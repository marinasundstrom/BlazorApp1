@inherits LayoutComponentBase
@inject IDialogService DialogService
@inject IStringLocalizer<MainLayout> T
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<MudThemeProvider @bind-IsDarkMode="_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <AppBar DrawerToggleCallback="@((e) => DrawerToggle())" IsDarkMode="_isDarkMode" DarkModeToggleCallback="@((e) => DarkModeToggle())" />
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">@T["AppTitle"]</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private MudTheme _theme = new();
    bool _drawerOpen = true;
    bool _isDarkMode = false;
    
    protected override async Task OnInitializedAsync()
    {
        _isDarkMode = (await LocalStorage.GetItemAsync<bool?>("isDarkMode")).GetValueOrDefault();
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    async Task DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;

       await LocalStorage.SetItemAsync("isDarkMode", _isDarkMode);
    }
}